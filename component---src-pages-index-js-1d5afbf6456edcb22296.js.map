{"version":3,"sources":["webpack:///./src/components/index.js","webpack:///./src/pages/index.js"],"names":["Box","memo","styled","withConfig","componentId","props","_css","p","_a","Object","keys","filter","key","includes","reduce","obj","k","_c","Button","createContext","react_default","a","createElement","assign","as","N","usePreview","_ref3","code","scope","useEffect","transformed","transform","presets","decoratorsLegacy","transformCode","_construct","Function","_toConsumableArray","concat","apply","values","Preview","_ref4","_objectWithoutPropertiesLoose","id","CodeEditor","_Component","_this","call","this","updateContent","ev","value","setState","onChange","state","_inheritsLoose","getDerivedStateFromProps","prevValueProp","prototype","render","_this$props","rest","lib","height","theme","language","options","fontSize","Component","React","Fragment","element","ReactDOM","document","getElementById","useContext","useState","useRef","useReducer","useMemo","useCallback","View","_ref2","src","source","uri","imageStyle","resizeMode","Text","initialCode","App","_useState","setCode","components_CodeEditor","position","top","right","width","bg","components_Preview","components_Button","title","onPress"],"mappings":"i2CAMO,IAAMA,EAAMC,eAAKC,YAAO,OAARC,WAAA,CAAAC,YAAA,gBAACF,CAAc,SAAAG,GAAK,OAAIC,EAAKD,MAEvCC,EAAO,SAAAC,GAChB,IAAMC,EAAK,CACP,eACA,aACA,YACA,cACA,qBACA,kBACA,oBACA,yBACA,0BACA,oBACA,cACA,kBACA,kBACA,eACA,mBACA,mBACA,cACA,iBACA,sBACA,uBACA,iBACA,cACA,SACA,QACA,mBACA,YACA,UACA,YACA,OACA,YACA,gBACA,WACA,aACA,WACA,aACA,WACA,YACA,cACA,aACA,SACA,qBACA,iBACA,OACA,gBACA,aACA,SACA,eACA,mBACA,aACA,cACA,YACA,iBACA,YACA,WACA,YACA,WACA,UACA,WACA,eACA,UACA,gBACA,oBACA,cACA,eACA,aACA,kBACA,WACA,aACA,QACA,WACA,SACA,SACA,cACA,eACA,gBACA,eACA,YACA,oBACA,sBACA,qBACA,sBACA,kBACA,mBACA,mBACA,YACA,MACA,YACA,kBACA,aACA,aACA,QACA,mBACA,SACA,SACA,YACA,WACA,OACA,aACA,iBACA,qBACA,YACA,KACA,OACA,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,MAwBvC,OAAOC,OAAOC,KAAKH,GACdI,OAAO,SAAAC,GAAG,OAAIJ,EAAGK,SAASD,KAC1BD,OAAO,SAAAC,GAAG,OAAe,IAAXL,EAAEK,KAChBD,OAAO,SAAAC,GAAG,OAAe,OAAXL,EAAEK,KAChBE,OAAO,SAACC,EAAKH,GAOV,MANY,SAARA,GACAG,EAAG,MAAYR,EAAEK,GACjBG,EAAG,OAAaR,EAAEK,IAElBG,EA9BD,SAAAC,GACP,OAAQA,GACJ,IAAK,KAAM,MAAO,kBAClB,IAAK,IAAK,MAAO,SACjB,IAAK,KAAM,MAAO,YAClB,IAAK,KAAM,MAAO,cAClB,IAAK,KAAM,MAAO,eAClB,IAAK,KAAM,MAAO,aAClB,IAAK,KAAM,MAAO,UAClB,IAAK,KAAM,MAAO,UAClB,IAAK,IAAK,MAAO,UACjB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","file":"component---src-pages-index-js-1d5afbf6456edcb22296.js","sourcesContent":["import React, { createContext, useContext, memo, useEffect, Component } from 'react'\nimport styled from 'styled-components'\nimport * as N from 'react-native'\nimport { transform } from '@babel/standalone'\nimport { ControlledEditor } from \"@monaco-editor/react\";\n\nexport const Box = memo(styled('div')(props => _css(props)))\n\nexport const _css = p => {\n    const _a = [\n        \"alignContent\",\n        \"alignItems\",\n        \"alignSelf\",\n        \"aspectRatio\",\n        \"backfaceVisibility\",\n        \"backgroundColor\",\n        \"borderBottomColor\",\n        \"borderBottomLeftRadius\",\n        \"borderBottomRightRadius\",\n        \"borderBottomWidth\",\n        \"borderColor\",\n        \"borderLeftColor\",\n        \"borderLeftWidth\",\n        \"borderRadius\",\n        \"borderRightColor\",\n        \"borderRightWidth\",\n        \"borderStyle\",\n        \"borderTopColor\",\n        \"borderTopLeftRadius\",\n        \"borderTopRightRadius\",\n        \"borderTopWidth\",\n        \"borderWidth\",\n        \"bottom\",\n        \"color\",\n        \"decomposedMatrix\",\n        \"direction\",\n        \"display\",\n        \"elevation\",\n        \"flex\",\n        \"flexBasis\",\n        \"flexDirection\",\n        \"flexGrow\",\n        \"flexShrink\",\n        \"flexWrap\",\n        \"fontFamily\",\n        \"fontSize\",\n        \"fontStyle\",\n        \"fontVariant\",\n        \"fontWeight\",\n        \"height\",\n        \"includeFontPadding\",\n        \"justifyContent\",\n        \"left\",\n        \"letterSpacing\",\n        \"lineHeight\",\n        \"margin\",\n        \"marginBottom\",\n        \"marginHorizontal\",\n        \"marginLeft\",\n        \"marginRight\",\n        \"marginTop\",\n        \"marginVertical\",\n        \"maxHeight\",\n        \"maxWidth\",\n        \"minHeight\",\n        \"minWidth\",\n        \"opacity\",\n        \"overflow\",\n        \"overlayColor\",\n        \"padding\",\n        \"paddingBottom\",\n        \"paddingHorizontal\",\n        \"paddingLeft\",\n        \"paddingRight\",\n        \"paddingTop\",\n        \"paddingVertical\",\n        \"position\",\n        \"resizeMode\",\n        \"right\",\n        \"rotation\",\n        \"scaleX\",\n        \"scaleY\",\n        \"shadowColor\",\n        \"shadowOffset\",\n        \"shadowOpacity\",\n        \"shadowRadius\",\n        \"textAlign\",\n        \"textAlignVertical\",\n        \"textDecorationColor\",\n        \"textDecorationLine\",\n        \"textDecorationStyle\",\n        \"textShadowColor\",\n        \"textShadowOffset\",\n        \"textShadowRadius\",\n        \"tintColor\",\n        \"top\",\n        \"transform\",\n        \"transformMatrix\",\n        \"translateX\",\n        \"translateY\",\n        \"width\",\n        \"writingDirection\",\n        \"zIndex\",\n        \"border\",\n        \"boxShadow\",\n        \"flexFlow\",\n        \"font\",\n        \"textShadow\",\n        \"textDecoration\",\n        \"textDecorationLine\",\n        \"transform\",\n        \"bg\",\n        \"size\",\n        \"m\", \"mt\", \"mb\", \"ml\", \"mr\", \"mx\", \"my\",\n        \"p\", \"pt\", \"pb\", \"pl\", \"pr\", \"px\", \"py\"\n    ]\n\n    const _c = k => {\n        switch (k) {\n            case \"bg\": return \"backgroundColor\";\n            case \"m\": return \"margin\";\n            case \"mt\": return \"marginTop\";\n            case \"mr\": return \"marginRight\";\n            case \"mb\": return \"marginBottom\";\n            case \"ml\": return \"marginLeft\";\n            case \"mx\": return \"marginX\";\n            case \"my\": return \"marginY\";\n            case \"p\": return \"padding\";\n            case \"pt\": return \"paddingTop\";\n            case \"pr\": return \"paddingRight\";\n            case \"pb\": return \"paddingBottom\";\n            case \"pl\": return \"paddingLeft\";\n            case \"px\": return \"paddingX\";\n            case \"py\": return \"paddingY\";\n            default: return k;\n        }\n    }\n\n    return Object.keys(p)\n        .filter(key => _a.includes(key))\n        .filter(key => p[key] !== true)\n        .filter(key => p[key] !== null)\n        .reduce((obj, key) => {\n            if (key === \"size\") {\n                obj[\"width\"] = p[key]\n                obj[\"height\"] = p[key]\n            } else {\n                obj[_c(key)] = p[key];\n            }\n            return obj;\n        }, {});\n}\n\n//Context \nconst RCtx = createContext();\n\nexport const Context = ({ children, value }) => <RCtx.Provider value={value}>{children}</RCtx.Provider>\n\nexport const useValue = () => useContext(RCtx)\n//SearchBar\n\n\nexport const View = ({ src, ...props }) => src ? <Box as={N.ImageBackground} source={{ uri: src }} {...props} imageStyle={{ resizeMode: \"stretch\" }} /> : <Box as={N.View} {...props} />\nexport const Text = props => <Box as={N.Text} {...props} />\nexport const Button = props => <Box as={N.Button} {...props} />\n\n//Preview\nconst usePreview = ({ code, scope }) => {\n    const transformCode = code => {\n        return transform(code, {\n            presets: [['stage-0', { decoratorsLegacy: true }], 'react'],\n        }).code\n    }\n    useEffect(() => {\n        let transformed = transformCode(code + \"render(<App />)\")\n        const func = new Function(...Object.keys(scope), transformed)\n        func(...Object.values(scope))\n    }, [code])\n}\n\nexport const Preview = ({ code, scope, ...props }) => {\n    usePreview({ code, scope })\n    return <div {...props} id=\"preview\" />\n}\n\n\nexport class CodeEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '',\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevValueProp) {\n            return { value: props.value, prevValueProp: props.value };\n        }\n        return null;\n    }\n\n    updateContent = (ev, value) => {\n        this.setState({ value }, () => {\n            if (this.props.onChange) {\n                this.props.onChange(this.state.value);\n            }\n        });\n    };\n\n    render() {\n        // eslint-disable-next-line no-unused-vars\n        const {\n            value,\n            onChange,\n            ...rest\n        } = this.props;\n\n        return (\n            <ControlledEditor\n                height=\"90vh\"\n                theme=\"dark\"\n                value={value}\n                onChange={this.updateContent}\n                language=\"javascript\"\n                options={{\n                    fontSize: 18\n                }}\n                {...rest}\n            />\n        );\n    }\n}\n\nexport class ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        })\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\n                        {this.state.error && this.state.error.toString()}\n                        <br />\n                        {this.state.errorInfo.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n}","import React, {\n    useEffect,\n    useContext,\n    useState,\n    useRef,\n    useReducer,\n    useMemo,\n    useCallback,\n} from \"react\"\nimport ReactDOM from 'react-dom'\nimport { Box, View, Text, Preview, Button, CodeEditor, ErrorBoundary } from \"../components\"\n// import ErrorBoundary from 'react-error-boundary';\n\nconst scope = {\n    React,\n    Fragment: React.Fragment,\n    Component: React.Component,\n    render: rrender(),\n    useEffect,\n    useContext,\n    useState,\n    useRef,\n    useReducer,\n    useMemo,\n    useCallback,\n    View,\n    Text,\n    Button\n}\n\nfunction rrender() {\n    return function render(element) {\n        ReactDOM.render(element, document.getElementById(\"preview\"))\n    }\n}\n\nconst initialCode = `\nconst App = () => <Text color=\"red\">Hi Kids</Text>\n`\nconst afterCode = `\nconst App = () => <Text color=\"red\">WOOWWWWWW</Text>\n`\n\nconst App = () => {\n    const [code, setCode] = useState(initialCode)\n\n    const handleEditorChange = (value) => {\n        if (value !== code) {\n            setCode(value)\n        }\n    };\n\n    return (\n        <div>\n            <CodeEditor\n                value={initialCode}\n                onChange={handleEditorChange}\n            />\n\n            <Box position=\"absolute\" top={5} right={5} width={320} height={480} bg=\"white\">\n                {/* <ErrorBoundary> */}\n                <Preview code={code} scope={scope} />\n                {/* </ErrorBoundary> */}\n            </Box>\n            <Button title=\"TEST\" onPress={() => setCode(afterCode)} />\n        </div>\n    );\n}\n\nexport default App;"],"sourceRoot":""}