{"version":3,"sources":["components/index.js","components/Editor.js","components/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["Box","memo","styled","props","_css","p","_a","Object","keys","filter","key","includes","reduce","obj","k","_c","View","src","as","N","source","style","width","height","Text","TextInput","FlatList","keyExtractor","item","index","toString","TouchableOpacity","Button","children","color","fontSize","fontFamily","fontWeight","lineHeight","letterSpacing","textAlign","fontStyle","textShadow","disabled","flexDirection","justifyContent","alignItems","React","Children","map","child","ReactIs","opacity","RCtx","createContext","SearchBar","onSearch","ref","margin","borderRadius","bg","cancelColor","placeholder","useState","value","setValue","iconVisible","setIconVisible","flex","transparentize","mb","onChangeText","text","onFocus","onBlur","multiline","placeholderTextColor","backgroundColor","onPress","dismiss","m","Animated","Easing","EditorCtx","EditorContext","Provider","useEditorValue","useContext","usePreview","code","scope","useEffect","transformed","transform","presets","decoratorsLegacy","transformCode","Function","values","Preview","id","ErrorBoundary","state","error","errorInfo","timeout","this","setState","setTimeout","clearTimeout","mt","ml","message","Component","Editor","onChange","theme","_","ct","language","options","formatOnPaste","formatOnType","autoIndent","useInterval","callback","delay","savedCallback","useRef","current","interval","setInterval","clearInterval","render","element","console","clear","ReactDOM","document","getElementById","Fragment","useReducer","useMemo","useCallback","useValue","Context","Image","uri","ScrollView","Picker","SectionList","Switch","ActivityIndicator","Alert","Modal","StatusBar","ImageBackground","TouchableHighlight","TouchableWithoutFeedback","KeyboardAvoidingView","SafeAreaView","temCode","App","setCurrent","setCode","isOpen","setIsOpen","isSave","setIsSave","saveData","data","localStorage","setItem","JSON","stringify","a","parse","getItem","_d","reload","transition","renderItem","clickItem","pl","fonSize","size","length","deleteItem","mr","position","top","right","backgroundImage","backgroundSize","backgroundRepeat","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2eAMMA,EAAMC,eAAKC,YAAO,MAAPA,EAAc,SAAAC,GAAK,OAAIC,EAAKD,OAEvCC,EAAO,SAAAC,GACT,IAAMC,EAAK,CACP,eACA,aACA,YACA,cACA,qBACA,kBACA,oBACA,yBACA,0BACA,oBACA,cACA,kBACA,kBACA,eACA,mBACA,mBACA,cACA,iBACA,sBACA,uBACA,iBACA,cACA,SACA,QACA,mBACA,YACA,UACA,YACA,OACA,YACA,gBACA,WACA,aACA,WACA,aACA,WACA,YACA,cACA,aACA,SACA,qBACA,iBACA,OACA,gBACA,aACA,SACA,eACA,mBACA,aACA,cACA,YACA,iBACA,YACA,WACA,YACA,WACA,UACA,WACA,eACA,UACA,gBACA,oBACA,cACA,eACA,aACA,kBACA,WACA,aACA,QACA,WACA,SACA,SACA,cACA,eACA,gBACA,eACA,YACA,oBACA,sBACA,qBACA,sBACA,kBACA,mBACA,mBACA,YACA,MACA,YACA,kBACA,aACA,aACA,QACA,mBACA,SACA,SACA,YACA,WACA,OACA,aACA,iBACA,qBACA,YACA,KACA,OACA,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KACnC,kBACA,iBACA,qBACA,mBACA,WACA,cAwBJ,OAAOC,OAAOC,KAAKH,GACdI,QAAO,SAAAC,GAAG,OAAIJ,EAAGK,SAASD,MAC1BD,QAAO,SAAAC,GAAG,OAAe,IAAXL,EAAEK,MAChBD,QAAO,SAAAC,GAAG,OAAe,OAAXL,EAAEK,MAChBE,QAAO,SAACC,EAAKH,GAOV,MANY,SAARA,GACAG,EAAG,MAAYR,EAAEK,GACjBG,EAAG,OAAaR,EAAEK,IAElBG,EA9BD,SAAAC,GACP,OAAQA,GACJ,IAAK,KAAM,MAAO,kBAClB,IAAK,IAAK,MAAO,SACjB,IAAK,KAAM,MAAO,YAClB,IAAK,KAAM,MAAO,cAClB,IAAK,KAAM,MAAO,eAClB,IAAK,KAAM,MAAO,aAClB,IAAK,KAAM,MAAO,UAClB,IAAK,KAAM,MAAO,UAClB,IAAK,IAAK,MAAO,U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","file":"static/js/main.f1fc3321.chunk.js","sourcesContent":["import React, { createContext, useContext, memo, useState, useEffect, useRef, Component, useReducer, useMemo, useCallback, Fragment } from 'react'\nimport * as ReactIs from \"react-is\";\nimport styled from 'styled-components'\nimport * as N from 'react-native'\nimport { transparentize } from 'polished'\n\nconst Box = memo(styled('div')(props => _css(props)))\n\nconst _css = p => {\n    const _a = [\n        \"alignContent\",\n        \"alignItems\",\n        \"alignSelf\",\n        \"aspectRatio\",\n        \"backfaceVisibility\",\n        \"backgroundColor\",\n        \"borderBottomColor\",\n        \"borderBottomLeftRadius\",\n        \"borderBottomRightRadius\",\n        \"borderBottomWidth\",\n        \"borderColor\",\n        \"borderLeftColor\",\n        \"borderLeftWidth\",\n        \"borderRadius\",\n        \"borderRightColor\",\n        \"borderRightWidth\",\n        \"borderStyle\",\n        \"borderTopColor\",\n        \"borderTopLeftRadius\",\n        \"borderTopRightRadius\",\n        \"borderTopWidth\",\n        \"borderWidth\",\n        \"bottom\",\n        \"color\",\n        \"decomposedMatrix\",\n        \"direction\",\n        \"display\",\n        \"elevation\",\n        \"flex\",\n        \"flexBasis\",\n        \"flexDirection\",\n        \"flexGrow\",\n        \"flexShrink\",\n        \"flexWrap\",\n        \"fontFamily\",\n        \"fontSize\",\n        \"fontStyle\",\n        \"fontVariant\",\n        \"fontWeight\",\n        \"height\",\n        \"includeFontPadding\",\n        \"justifyContent\",\n        \"left\",\n        \"letterSpacing\",\n        \"lineHeight\",\n        \"margin\",\n        \"marginBottom\",\n        \"marginHorizontal\",\n        \"marginLeft\",\n        \"marginRight\",\n        \"marginTop\",\n        \"marginVertical\",\n        \"maxHeight\",\n        \"maxWidth\",\n        \"minHeight\",\n        \"minWidth\",\n        \"opacity\",\n        \"overflow\",\n        \"overlayColor\",\n        \"padding\",\n        \"paddingBottom\",\n        \"paddingHorizontal\",\n        \"paddingLeft\",\n        \"paddingRight\",\n        \"paddingTop\",\n        \"paddingVertical\",\n        \"position\",\n        \"resizeMode\",\n        \"right\",\n        \"rotation\",\n        \"scaleX\",\n        \"scaleY\",\n        \"shadowColor\",\n        \"shadowOffset\",\n        \"shadowOpacity\",\n        \"shadowRadius\",\n        \"textAlign\",\n        \"textAlignVertical\",\n        \"textDecorationColor\",\n        \"textDecorationLine\",\n        \"textDecorationStyle\",\n        \"textShadowColor\",\n        \"textShadowOffset\",\n        \"textShadowRadius\",\n        \"tintColor\",\n        \"top\",\n        \"transform\",\n        \"transformMatrix\",\n        \"translateX\",\n        \"translateY\",\n        \"width\",\n        \"writingDirection\",\n        \"zIndex\",\n        \"border\",\n        \"boxShadow\",\n        \"flexFlow\",\n        \"font\",\n        \"textShadow\",\n        \"textDecoration\",\n        \"textDecorationLine\",\n        \"transform\",\n        \"bg\",\n        \"size\",\n        \"m\", \"mt\", \"mb\", \"ml\", \"mr\", \"mx\", \"my\",\n        \"p\", \"pt\", \"pb\", \"pl\", \"pr\", \"px\", \"py\",\n        \"backgroundImage\",\n        \"backgroundSize\",\n        \"backgroundPosition\",\n        \"backgroundRepeat\",\n        \"overflow\",\n        \"transition\"\n    ]\n\n    const _c = k => {\n        switch (k) {\n            case \"bg\": return \"backgroundColor\";\n            case \"m\": return \"margin\";\n            case \"mt\": return \"marginTop\";\n            case \"mr\": return \"marginRight\";\n            case \"mb\": return \"marginBottom\";\n            case \"ml\": return \"marginLeft\";\n            case \"mx\": return \"marginX\";\n            case \"my\": return \"marginY\";\n            case \"p\": return \"padding\";\n            case \"pt\": return \"paddingTop\";\n            case \"pr\": return \"paddingRight\";\n            case \"pb\": return \"paddingBottom\";\n            case \"pl\": return \"paddingLeft\";\n            case \"px\": return \"paddingX\";\n            case \"py\": return \"paddingY\";\n            default: return k;\n        }\n    }\n\n    return Object.keys(p)\n        .filter(key => _a.includes(key))\n        .filter(key => p[key] !== true)\n        .filter(key => p[key] !== null)\n        .reduce((obj, key) => {\n            if (key === \"size\") {\n                obj[\"width\"] = p[key]\n                obj[\"height\"] = p[key]\n            } else {\n                obj[_c(key)] = p[key];\n            }\n            return obj;\n        }, {});\n}\n\n// const View = props => <Box as={N.View} {...props} />;\nconst View = ({ src, ...props }) => src ? <Box as={N.ImageBackground} source={src} {...props} style={{ width: '100%', height: '100%', ..._css(props) }} /> : <Box as={N.View} {...props} />\n// const View = ({ src, ...props }) => src ? <Box as={N.ImageBackground} source={src} {...props} /> : <Box as={N.View} {...props} />\n\nconst Text = props => <Box as={N.Text} {...props} />;\n// const Image = props => <Box as={N.Image} {...props} />\nconst Image = ({ src, ...props }) => src ? <Box as={N.Image} source={{ uri: src }} {...props} /> : <Box as={N.Image} {...props} />\n\nconst TextInput = props => <Box as={N.TextInput} {...props} />\nconst ScrollView = props => <Box as={N.ScrollView} {...props} />\nconst Picker = props => <Box as={N.Picker} {...props} />\n// const Slider = props => <Box as={N.Slider} {...props} />\nconst Switch = props => <Box as={N.Switch} {...props} />\nconst FlatList = props => <Box as={N.FlatList} {...props} keyExtractor={(item, index) => index.toString()}/>\nconst SectionList = props => <Box as={N.SectionList} {...props} />\nconst ActivityIndicator = props => <Box as={N.ActivityIndicator} {...props} />\nconst Alert = props => <Box as={N.Alert} {...props} />\nconst Modal = props => <Box as={N.Modal} {...props} />\nconst StatusBar = props => <Box as={N.StatusBar} {...props} />\n\nconst ImageBackground = props => <Box as={N.ImageBackground} {...props} style={{ width: '100%', height: '100%', ..._css(props) }} />\nconst TouchableOpacity = props => <Box as={N.TouchableOpacity} {...props} />\nconst TouchableHighlight = props => <Box as={N.TouchableHighlight} {...props} />\nconst TouchableWithoutFeedback = props => <Box as={N.TouchableWithoutFeedback} {...props} />\nconst KeyboardAvoidingView = props => <Box as={N.KeyboardAvoidingView} {...props} />\nconst SafeAreaView = props => <Box as={N.SafeAreaView} {...props} />\n\nconst Button = ({ children, color = \"darkmagenta\", fontSize, fontFamily, fontWeight = \"bold\", lineHeight, letterSpacing, textAlign, fontStyle, textShadow, disabled, ...props }) => {\n    return (\n        <Box as={N.TouchableOpacity} flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" disabled={disabled} {...props} >\n            {React.Children.map(children, child => ReactIs.isElement(child) ? child : <Text\n                opacity={disabled ? 0.3 : 1}\n                color={color}\n                fontFamily={fontFamily}\n                fontSize={fontSize}\n                fontWeight={fontWeight}\n                lineHeight={lineHeight}\n                letterSpacing={letterSpacing}\n                textAlign={textAlign}\n                fontStyle={fontStyle}\n                textShadow={textShadow} >{child}</Text>)}\n        </Box>\n    )\n}\n\n//Context \nconst RCtx = createContext();\n\nconst Context = ({ children, value }) => <RCtx.Provider value={value}>{children}</RCtx.Provider>\n\nconst useValue = () => useContext(RCtx)\n//SearchBar\n\nconst SearchBar = memo(({\n    onSearch,\n    ref,\n    height = 32,\n    margin = 2,\n    color = \"black\",\n    borderRadius = 5,\n    bg = \"white\",\n    cancelColor = \"blue\",\n    placeholder = \"search\",\n    ...props }) => {\n    const [value, setValue] = useState(\"\")\n    const [iconVisible, setIconVisible] = useState(false)\n    return (\n        <View\n            height={height}\n            {...props}\n            flexDirection=\"row\"\n            alignItems=\"stretch\"\n        >\n            <View\n                flex={1}\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                borderRadius={borderRadius}\n                bg={bg}\n            >\n\n                <Text color={color ? transparentize(0.5, color) : \"grey\"} fontSize={22} mb={4}> ⌕ </Text>\n                <TextInput\n                    ref={ref}\n                    value={value}\n                    onChangeText={text => {\n                        setValue(text)\n                        onSearch(text)\n                    }}\n                    onFocus={() => setIconVisible(true)}\n                    onBlur={() => setIconVisible(false)}\n                    multiline={false}\n                    placeholder={placeholder}\n                    placeholderTextColor={color ? transparentize(0.5, color) : \"grey\"}\n                    backgroundColor=\"transparent\"\n                    flex={1}\n                    color={color}\n                ></TextInput>\n                {iconVisible ? (<TouchableOpacity onPress={() => {\n                    setValue(\"\");\n                    onSearch(\"\")\n                }\n                }>\n                    <Text color={color ? transparentize(0.5, color) : \"grey\"} fontSize={18}> ⊗ </Text>\n                </TouchableOpacity>) : null}\n            </View>\n            {iconVisible ? (<Button\n                onPress={() => {\n                    setValue(\"\")\n                    onSearch(\"\")\n                    N.Keyboard.dismiss();\n                    setIconVisible(false);\n                }}\n                color={cancelColor ? cancelColor : \"blue\"}\n                justifyContent=\"center\"\n                fontSize={20}\n                fontWeight=\"200\"\n                m={2}\n            >cancel</Button>) : null}\n        </View>\n    )\n})\n\n//Animated\nconst Animated = N.Animated;\nconst Easing = N.Easing;\n\nexport {\n    React,\n    Component,\n    Fragment,\n    useState,\n    useEffect,\n    useRef,\n    useMemo,\n    useCallback,\n    useReducer,\n    createContext,\n    useContext,\n    useValue,\n    Context,\n    Box,\n    View,\n    Text,\n    Button,\n    Image,\n    TextInput,\n    ScrollView,\n    Picker,\n    FlatList,\n    SectionList,\n    Switch,\n    ActivityIndicator,\n    Alert,\n    Modal,\n    StatusBar,\n    ImageBackground,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableWithoutFeedback,\n    KeyboardAvoidingView,\n    SafeAreaView,\n    SearchBar,\n    Animated,\n    Easing,\n}","import { React, Box, createContext, useContext, Component, useEffect } from './index'\nimport { ControlledEditor } from \"@monaco-editor/react\";\nimport { transform } from '@babel/standalone'\n\n//Context \nconst EditorCtx = createContext();\nconst EditorContext = ({ children, value }) => <EditorCtx.Provider value={value}>{children}</EditorCtx.Provider>\nconst useEditorValue = () => useContext(EditorCtx)\n\nconst usePreview = ({ code, scope }) => {\n    const transformCode = code => {\n        return transform(code, {\n            presets: [['stage-0', { decoratorsLegacy: true }], 'react'],\n        }).code\n    }\n\n    let sC = `\n    const Root = () => <View bg=\"white\" width={264} height={466} mt={67} ml={18.4} overflow=\"hidden\"><App/></View>;\n    render(<Root />);\n    `\n    useEffect(() => {\n        let transformed = transformCode(code + sC)\n        const func = new Function(...Object.keys(scope), transformed)\n        func(...Object.values(scope))\n    }, [code])\n}\n\nconst Preview = () => {\n    const { code, scope } = useEditorValue();\n    usePreview({ code, scope })\n    return <div id=\"preview\" />\n}\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { error: null, errorInfo: null };\n        this.timeout = 0;\n    }\n\n    componentDidCatch(error, errorInfo) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        })\n        this.timeout = setTimeout(() => {\n            this.setState({\n                error: null,\n                errorInfo: null\n            })\n            if (this.timeout) clearTimeout(this.timeout);\n        }, 2000);\n    }\n\n    render() {\n        if (this.state.errorInfo) {\n            // Error path\n            return (\n                <Box bg=\"white\" width={264} height={466} mt={67} ml={18.4}>\n                    <Box as={\"h2\"} color=\"red\">Error</Box>\n                    <Box color=\"darkblue\">\n                        {this.state.error ? this.state.error.message.toString() : null}\n                    </Box>\n                </Box>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n}\n\nconst Editor = () => {\n    const { code, onChange } = useEditorValue();\n\n    let timeout = 0;\n\n    const updateContent = (_, ct) => {\n        let code = ct;\n        if (timeout) clearTimeout(timeout);\n        timeout = setTimeout(() => {\n            //search function\n            onChange(code)\n        }, 1000);\n    };\n\n    return (\n        <ControlledEditor\n            height=\"95vh\"\n            theme=\"dark\"\n            value={code}\n            onChange={updateContent}\n            language=\"javascript\"\n            options={{\n                fontSize: 22,\n                formatOnPaste: true,\n                formatOnType: true,\n                autoIndent: true\n            }}\n        />\n    );\n\n}\n\nexport {\n    Preview,\n    ErrorBoundary,\n    Editor,\n    EditorContext,\n    useEditorValue,\n}","import { useEffect, useRef } from 'react';\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef(() => {});\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    if (delay !== null) {\n      const interval = setInterval(() => savedCallback.current(), delay || 0);\n      return () => clearInterval(interval);\n    }\n\n    return undefined;\n  }, [delay]);\n};\n\nexport default useInterval;","import {\n  React,\n  Component,\n  Fragment,\n  useCallback,\n  useEffect,\n  useContext,\n  useReducer,\n  useMemo,\n  useRef,\n  useState,\n  createContext,\n  useValue,\n  Context,\n  Box,\n  View,\n  Text,\n  Button,\n  Image,\n  TextInput,\n  ScrollView,\n  Picker,\n  FlatList,\n  SectionList,\n  Switch,\n  ActivityIndicator,\n  Alert,\n  Modal,\n  StatusBar,\n  ImageBackground,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  SafeAreaView,\n  SearchBar,\n  Animated,\n  Easing,\n} from \"./components\"\nimport ReactDOM from 'react-dom'\nimport { Preview, ErrorBoundary, Editor, EditorContext } from './components/Editor'\nimport useInterval from \"./components/useInterval\"\n\nconst scope = {\n  render: rrender(),\n  React,\n  Component,\n  Fragment,\n  useEffect,\n  useContext,\n  useReducer,\n  useMemo,\n  useCallback,\n  useRef,\n  useState,\n  createContext,\n  useValue,\n  Context,\n  View,\n  Text,\n  Button,\n  Image,\n  TextInput,\n  ScrollView,\n  Picker,\n  FlatList,\n  SectionList,\n  Switch,\n  ActivityIndicator,\n  Alert,\n  Modal,\n  StatusBar,\n  ImageBackground,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableWithoutFeedback,\n  KeyboardAvoidingView,\n  SafeAreaView,\n  SearchBar,\n  Animated,\n  Easing,\n}\n\nfunction rrender() {\n  return function render(element) {\n    console.clear()\n    ReactDOM.render(element, document.getElementById(\"preview\"))\n  }\n}\n\n\nconst temCode = `\nconst App = () => <Text color=\"red\">Hi Kids</Text>\n`\n\nconst App = () => {\n  const [current, setCurrent] = useState(\"New App\")\n  const [code, setCode] = useState(temCode.toString());\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSave, setIsSave] = useState(true);\n\n  useInterval(() => {\n    if (!isSave) saveData();\n  }, (current && current !== \"New App\")? 5000: null);\n\n  const [state, setState] = useState({\n    current: \"New App\",\n    data: {\n      \"New App\": temCode.toString()\n    }\n  })\n\n  const clickItem = (item) => {\n    setCurrent(item)\n    setCode(state.data[item])\n    setIsOpen(false)\n    setIsSave(true)\n  }\n\n  const deleteItem = (item) => {\n    if (current === item) {\n      setCurrent(\"New App\")\n      state.current = \"New App\"\n      setCode(temCode.toString())\n      setIsSave(true)\n    }\n    delete state.data[item];\n    setState({\n      ...state,\n      current: state.current,\n      data: state.data\n    })\n    if (Object.keys(state.data).length === 1) setIsOpen(false)\n    localStorage.setItem('@rnkids', JSON.stringify(state))\n  }\n\n  const saveData = () => {\n    if(current !== \"New App\") {\n      state.current = current;\n      state.data[current] = code;\n      setState({\n        ...state,\n        current: state.current,\n        data: state.data\n      })\n      localStorage.setItem('@rnkids', JSON.stringify(state))\n      setIsSave(true)\n    }\n  }\n\n\n  const newApp = () => {\n    state.current = \"New App\"\n    setState({\n      ...state,\n      current: state.current\n    })\n    setCurrent(\"New App\")\n    setCode(temCode.toString())\n    setIsSave(true)\n  }\n\n  const toggleSidePanel = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const onUpdateFileName = text => {\n    setCurrent(text)\n    if (isSave) setIsSave(false)\n  }\n\n  const onChange = (ct) => {\n    if (ct !== code) {\n      setCode(ct)\n      setIsSave(false)\n    };\n  }\n\n  useEffect(() => {\n    const reload = async () => {\n      const _d = await JSON.parse(localStorage.getItem('@rnkids'));\n      if (_d) {\n        setState(_d)\n        setCurrent(_d.current)\n        setCode(_d.data[_d.current])\n      }\n    }\n    reload();\n  }, [])\n\n  return (\n    <EditorContext value={{ scope, onChange, code }}>\n      <View flex={1} flexDirection=\"row\">\n        <View width={isOpen ? 200 : 0} transition=\"width 0.5s\" bg=\"black\">\n          <Text color=\"white\" fontWeight=\"bold\" textAlign=\"center\" height={44} mt={20}>Files</Text>\n          <FlatList\n            flex={1}\n            data={Object.keys(state.data).filter(key => key !== \"New App\")}\n            renderItem={({ item }) =>\n              <View mt={8} flexDirection=\"row\" justifyContent=\"space-between\">\n                <TouchableOpacity flex={1} onPress={() => clickItem(item)}>\n                  <Text\n                    bg=\"#2B2727\"\n                    color=\"white\"\n                    pl={8}\n                    fonSize={24}\n                    height={24}\n                  >{item}</Text>\n                </TouchableOpacity>\n                <Button color=\"red\" bg=\"#2B2727\" size={24} onPress={() => deleteItem(item)}>❌</Button>\n              </View>\n            }\n          />\n        </View>\n        <View flex={1}>\n          <View flexDirection=\"row\" width=\"100%\" height={44} bg=\"black\" justifyContent=\"flex-start\" alignItems=\"center\">\n            <Button color=\"white\" size={40} fontSize={20} ml={10}\n              onPress={toggleSidePanel}\n            >{isOpen ? \"📁\" : \"📂\"}</Button>\n            <Button\n              borderRadius={8}\n              color=\"white\"\n              size={32}\n              fontSize={20} ml={20} mr={10}\n              disabled={isSave}\n              onPress={saveData}\n            >💾</Button>\n            <TextInput\n              color=\"white\"\n              value={current}\n              placeholder={current}\n              placeholderTextColor=\"lightgrey\" bg=\"#2B2727\"\n              multiline={false}\n              onChangeText={onUpdateFileName}\n            />\n            <Button color=\"white\" size={40} fontSize={18} ml={20} mr={10}\n              onPress={newApp}\n            >✛</Button>\n          </View>\n          <Editor />\n          <Box\n            position=\"absolute\"\n            top={0} right={0} width={300} height={600}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            bg=\"transparent\"\n            backgroundImage=\"url('https://raw.githubusercontent.com/koenbok/Framer/master/extras/DeviceResources/iphone-6-silver.png')\"\n            backgroundSize=\"100% 100%\"\n            backgroundRepeat=\"no-repeat\"\n          >\n            <ErrorBoundary>\n              <Preview />\n            </ErrorBoundary>\n          </Box>\n        </View>\n      </View>\n    </EditorContext>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}